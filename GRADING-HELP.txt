Author:
Tanay Gavankar (tgavanka)

NOTE: All the code positions I've given are just examples of that feature. There are similar (and other) usages of that technology elsewhere, and if for some reason you need more examples and are unable to find them, please let me know.

Required Elements:
Javascript
	- Objects
		- public/js/presenter.js and public/js/viewer.js
		- views/pdf/script.ejs

HTML
	- Tables
		- Used to display the list of presentations linked to your account as well as available options for them.
		- views/list.ejs:32
	- Forms w/ validation
		- Validates inputs on forms that have requirements.
		- HTML5 "required" and "pattern" attr
			- views/register.ejs:58,62,66
			- views/login.ejs:51,55
	- HTML5 Accessibility Tags
		- Uses accessibility tags to support screen-readers, etc.
		- <header> - views/parts/top.ejs:34
		- <footer> - views/parts/bottom.ejs:18
		- <nav> - views/parts/bottom.ejs:3

CSS
	- Reset
		- Reset all styles for browser consistency.
		- public/css/reset.css (used in all pages, i.e. views/parts/top.ejs:7)
	- Pseudo-selectors
		- Used for navigation bar and list page.
		- :last-child - public/css/style.css:133
		- :nth-of-type - public/css/style.css:389-396,422-429,440-448
		- :before - public/css/style.css:431
				- views/present.ejs:124,129
	- Media queries
		- Used to reflow layout depending on screen size.
		- min-width: public/css/style.css:310
		- max-width: public/css/style.css:399
	- Fluid Layouts
		- Resize homepage on desktop
			- Navbar moves from top to bottom
			- Homepage splash image disappears
			- Pure CSS (media-queries)
		- Resize /list on desktop
			- Table reflows from full table to vertical accordian
			- Pure CSS, including vertical accordian (uses :target / media-queries)
	- Animations
		- Used for any AJAX form submit (i.e. "/login")
		- Ajax Loading Icon
			- public/css/style.css:266-299

DOM Manipulation
	- Show/hide AJAX loading icon
		- views/login.ejs:7,32
		- All other forms
	- Disable form submit on AJAX
		- views/login.ejs:8,33
		- All other forms
	- Update AJAX response (i.e. success/error)
		- views/login.ejs:20
		- All forms
	- Presentation changes page on page turn

jQuery
	- See DOM Manipulation
	- event handling
		- public/js/viewer.js:29,39

AJAX client
	- Submit POST
		- views/login.ejs:36
		- All forms
		
AJAX server
	- Handle POST
		- loginRoutes.js:31,42
		- presRoutes.js:98,174,215

Node.js (with Express)
	- [*]Routes.js

Socket.IO
	- socketSrv.js (server)
	- public/js/presenter.js:19,28
	- public/js/viewer.js:15,20

MongoDB via Mongoose
	- presRoutes.js:13,89,136,228
	- loginRoutes.js:57

Redis
	- redisRoutes.js:24
	- socketSrv.js:20

window.postMessage
	- views/pdf/script.ejs:105
	- public/js/presenter.js:21
	
General Security
	- All AJAX calls are protected from CSRF attacks by CSRF tokens
	- The presenter view has to sign each "update page" action with a key generated by the server, which is received upon registering as an authorized user.
	- In production, it would be served under HTTPS - this app is not because introducing SSL certs causes a lot of issues that I did not have time to address, as well as the additional monetary costs of having a valid SSL cert.
